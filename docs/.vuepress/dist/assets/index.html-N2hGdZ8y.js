import{_ as s}from"./docker-run-C2jl39bg.js";import{_ as n,a}from"./image-BBZgbaf1.js";import{_ as e}from"./image-1-CdUUpRTA.js";import{_ as i,o as t,c as p,e as l}from"./app-CpEU-mIR.js";const c={},d=l(`<p>系统分为四个服务：</p><ul><li>web/server端-用于资产管理、任务管理等</li><li>scan端-用于扫描，可以在多台机器部署</li><li>Mongodb-数据库，只要web和scan能连接上这个数据库就行。</li><li>redis-redis，只要web和scan能连接上这个redis就行。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>单机部署和分布式部署二选一。</p><p>单机部署：compose配置文件会拉取四个服务的镜像创建容器。</p><p>分布式部署：web、scan、mongodb、redis在不同机器，保持web、scan可以和mongodb、redis即可。</p></div><h2 id="单机部署" tabindex="-1"><a class="header-anchor" href="#单机部署"><span>单机部署</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>单机部署的compose配置文件中已经包含了数据库镜像，只需要修改mongodb、redis的账号密码即可。scan的docker由于部分机器网络原因（暂时不清楚哪里的问题），临时解决方案是将network_mode设置为host，所以scan的docker可以使用127进行访问数据库，无需更改。</p></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry.git</span></span>
<span class="line"><span>cd ScopeSentry</span></span>
<span class="line"><span># 修改.env文件中的mongodb、redis账号密码。</span></span>
<span class="line"><span>docker-compose -f single-host-deployment.yml up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行之后一共四个容器 <ul><li>scope-sentry (服务端-web界面)</li><li>scopesentry-scan (扫描端)</li><li>Mongodb (数据库)</li><li>Redis</li></ul></li></ul><p>然后访问IP:8082</p><p>默认账号密码：ScopeSentry/ScopeSentry</p><p>单机部署就这么多，修改账号密码，然后一个命令启动docker <img src="`+s+`" alt="alt text"></p><p>单机部署之后，如果想在其他机器运行扫描节点，只需要单独运行scan，将数据库地址填写为单机部署那台机器的ip。</p><h2 id="分布式部署" tabindex="-1"><a class="header-anchor" href="#分布式部署"><span>分布式部署</span></a></h2><h2 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库"><span>数据库</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>请确保安装了 docker 和 docker-compose</p><p>redis 和 MongoDb 可以不使用 docker 安装，自行按照设置账号密码就行。</p><p>mongodb和redis可以不适用本教程提供的docker镜像，可以自行搭建。</p><p>版本： mongodb：7.0.4</p><p>redis:7.0.11</p></div><h3 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>redis</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry-Scan.git</span></span>
<span class="line"><span>cd ScopeSentry-Scan/build</span></span>
<span class="line"><span># 编辑 redis-docker-compose.yml文件中的yourpassword密码</span></span>
<span class="line"><span>docker-compose -f redis-docker-compose.yml up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb"><span>MongoDb</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry-Scan.git</span></span>
<span class="line"><span>cd ScopeSentry-Scan/build</span></span>
<span class="line"><span># 编辑 mongodb-docker-compose.yml文件中的账号密码</span></span>
<span class="line"><span>docker-compose -f mongodb-docker-compose.yml up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="web-server-端" tabindex="-1"><a class="header-anchor" href="#web-server-端"><span>Web/Server 端</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于内置数据较多，数据库初始化需要等待一段时间。</p></div><h3 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装"><span>Docker 安装</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry.git</span></span>
<span class="line"><span>cd ScopeSentry</span></span>
<span class="line"><span># 编辑docke-compose.yml文件中Redis、MongoDb的IP、端口、账号密码</span></span>
<span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后可以使用<code>docker logs -f 容器id</code>查看容器日志，确保运行成功。</p><p>成功后如下图: <img src="`+n+`" alt="alt text"></p><p>访问 http://IP:8082</p><p>默认账号密码为 ScopeSentry/ScopeSentry</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>忘记密码进入 Mongodb 数据库修改 user 表中的 password 为 b0ce71fcbed8a6ca579d52800145119cc7d999dc8651b62dfc1ced9a984e6e64 重置为 ScopeSentry</p></div><p>如果 docker pull 太慢，可以本地构建 docker 镜像</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry.git</span></span>
<span class="line"><span>mv ScopeSentry/dockerfile .</span></span>
<span class="line"><span>docker build -t autumn27/scopesentry:latest .</span></span>
<span class="line"><span>cd ScopeSentry</span></span>
<span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="源码安装" tabindex="-1"><a class="header-anchor" href="#源码安装"><span>源码安装</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry.git</span></span>
<span class="line"><span>cd ScopeSentry</span></span>
<span class="line"><span>pip install -r requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目根目录创建 config.yaml 内容如下,修改 Mongodb、Redis 的相关连接信息。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>logs:</span></span>
<span class="line"><span>  total_logs: 1000</span></span>
<span class="line"><span>mongodb:</span></span>
<span class="line"><span>  database_name: ScopeSentry</span></span>
<span class="line"><span>  ip: 127.0.0.1</span></span>
<span class="line"><span>  password: QckSdkg5CKvtxfec</span></span>
<span class="line"><span>  port: 27017</span></span>
<span class="line"><span>  username: root</span></span>
<span class="line"><span>redis:</span></span>
<span class="line"><span>  ip: 127.0.0.1</span></span>
<span class="line"><span>  password: ScopeSentry</span></span>
<span class="line"><span>  port: &#39;6379&#39;</span></span>
<span class="line"><span>system:</span></span>
<span class="line"><span>  timezone: Asia/Shanghai</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后运行程序</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>python3 main.py</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行成功截图 <img src="`+a+`" alt="alt text"></p><p>访问 http://IP:8082</p><p>默认账号密码为 ScopeSentry/ScopeSentry</p><h2 id="scan-端" tabindex="-1"><a class="header-anchor" href="#scan-端"><span>Scan 端</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于 Scan 端需要连接数据库并查询内置信息，所以需要等 Server 端运行成功(初始化数据库)之后再进行创建 Scan。推荐 docker 安装~</p></div><h3 id="docker-安装-1" tabindex="-1"><a class="header-anchor" href="#docker-安装-1"><span>Docker 安装</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry-Scan.git</span></span>
<span class="line"><span>cd ScopeSentry-Scan/build</span></span>
<span class="line"><span># 编辑 scan-docker-compose.yml文件中Mongdb、Redis的连接信息，NodeName为节点名称，每个节点名称请保持唯一性（如果为空会随机生成，可在web界面更改名称）。</span></span>
<span class="line"><span>docker-compose -f scan-docker-compose.yml up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后可以使用<code>docker logs -f 容器id</code>查看容器日志，确保运行成功。</p><p>成功后如下图: <img src="`+e+`" alt="alt text"></p><h3 id="直接运行" tabindex="-1"><a class="header-anchor" href="#直接运行"><span>直接运行</span></a></h3><p>需要安装 libpcap 环境</p><p>Windows 下载 npcap 驱动</p><p>Linux 已经静态编译打包 libpcap，无需其他操作</p><p>爬虫依赖chrome浏览器参考https://github.com/chaitin/rad</p><p>下载 https://github.com/Autumn-27/ScopeSentry-Scan/releases</p><p>首次运行会生成配置文件，修改配置文件中的数据库地址，，NodeName 为节点名称，每个节点名称请保持唯一性，其余线程配置可根据自行配置。重新运行</p><h3 id="编译安装" tabindex="-1"><a class="header-anchor" href="#编译安装"><span>编译安装</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/Autumn-27/ScopeSentry-Scan.git</span></span>
<span class="line"><span>cd ScopeSentry-Scan</span></span>
<span class="line"><span>go build -o dist/ScopeSentry ./cmd/ScopeSentry/main.go</span></span>
<span class="line"><span>cd dist</span></span>
<span class="line"><span>chmod +x ScopeSentry</span></span>
<span class="line"><span>./ScopeSentry</span></span>
<span class="line"><span>#首次运行会生成配置文件，修改配置文件中的数据库地址，重新运行</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要安装 libpcap 环境</p><p>Windows 下载 npcap 驱动</p><p>Linux 安装 libpcap</p><p>运行成功截图：</p><p><img src="`+e+'" alt="alt text"></p><h2 id="数据迁移" tabindex="-1"><a class="header-anchor" href="#数据迁移"><span>数据迁移</span></a></h2><p>在数据库的docker配置文件中，有挂载目录设置，默认为当前运行目录的data目录，迁移数据时将文件迁移即可。</p><h2 id="更新" tabindex="-1"><a class="header-anchor" href="#更新"><span>更新</span></a></h2><p>MongoDb、redis不用动。</p><p>Web/Server: 将容器、镜像删除，单机部署可以直接执行之前的配置文件，会自动拉取Web不影响数据库。分布式部署还按照教程重新拉取即可。</p><p>Scan：将容器、镜像删除，单机部署可以直接执行之前的配置文件，会自动拉取Scan不影响数据库。分布式部署还按照教程重新拉取即可。</p>',64),r=[d];function o(m,v){return t(),p("div",null,r)}const k=i(c,[["render",o],["__file","index.html.vue"]]),S=JSON.parse(`{"path":"/guide/install/","title":"安装","lang":"zh-CN","frontmatter":{"title":"安装","author":null,"icon":"grommet-icons:install","createTime":"2024/05/19 18:01:05","permalink":"/guide/install/","description":"系统分为四个服务： web/server端-用于资产管理、任务管理等 scan端-用于扫描，可以在多台机器部署 Mongodb-数据库，只要web和scan能连接上这个数据库就行。 redis-redis，只要web和scan能连接上这个redis就行。 提示 单机部署和分布式部署二选一。 单机部署：compose配置文件会拉取四个服务的镜像创建容器。...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'dark';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["link",{"rel":"alternate","hreflang":"en-us","href":"https://www.scope-sentry.top/en/guide/install/"}],["meta",{"property":"og:url","content":"https://www.scope-sentry.top/guide/install/"}],["meta",{"property":"og:site_name","content":"ScopeSentry"}],["meta",{"property":"og:title","content":"安装"}],["meta",{"property":"og:description","content":"系统分为四个服务： web/server端-用于资产管理、任务管理等 scan端-用于扫描，可以在多台机器部署 Mongodb-数据库，只要web和scan能连接上这个数据库就行。 redis-redis，只要web和scan能连接上这个redis就行。 提示 单机部署和分布式部署二选一。 单机部署：compose配置文件会拉取四个服务的镜像创建容器。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.scope-sentry.top/images/docker-run.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-20T12:12:59.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-20T12:12:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装\\",\\"image\\":[\\"https://www.scope-sentry.top/images/docker-run.png\\",\\"https://www.scope-sentry.top/images/docker-server.png\\",\\"https://www.scope-sentry.top/images/image.png\\",\\"https://www.scope-sentry.top/images/image-1.png\\",\\"https://www.scope-sentry.top/images/image-1.png\\"],\\"dateModified\\":\\"2024-07-20T12:12:59.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"单机部署","slug":"单机部署","link":"#单机部署","children":[]},{"level":2,"title":"分布式部署","slug":"分布式部署","link":"#分布式部署","children":[]},{"level":2,"title":"数据库","slug":"数据库","link":"#数据库","children":[{"level":3,"title":"redis","slug":"redis","link":"#redis","children":[]},{"level":3,"title":"MongoDb","slug":"mongodb","link":"#mongodb","children":[]}]},{"level":2,"title":"Web/Server 端","slug":"web-server-端","link":"#web-server-端","children":[{"level":3,"title":"Docker 安装","slug":"docker-安装","link":"#docker-安装","children":[]},{"level":3,"title":"源码安装","slug":"源码安装","link":"#源码安装","children":[]}]},{"level":2,"title":"Scan 端","slug":"scan-端","link":"#scan-端","children":[{"level":3,"title":"Docker 安装","slug":"docker-安装-1","link":"#docker-安装-1","children":[]},{"level":3,"title":"直接运行","slug":"直接运行","link":"#直接运行","children":[]},{"level":3,"title":"编译安装","slug":"编译安装","link":"#编译安装","children":[]}]},{"level":2,"title":"数据迁移","slug":"数据迁移","link":"#数据迁移","children":[]},{"level":2,"title":"更新","slug":"更新","link":"#更新","children":[]}],"readingTime":{"minutes":4.27,"words":1281},"git":{"updatedTime":1721477579000,"contributors":[{"name":"Autumn.home","email":"autumn@home.com","commits":23},{"name":"Rainy-Autumn","email":"2500412988@qq.com","commits":2}]},"autoDesc":true,"filePathRelative":"notes/guide/安装.md"}`);export{k as comp,S as data};
